version: 2.38.{build}

environment:
  # Required so bash starts in the same folder as from where it was called.
  CHERE_INVOKING: 1
  matrix:
    - compiler: msys2
    - compiler: cygwin

build_script:
  - ps: >-
      cd $env:APPVEYOR_BUILD_FOLDER    

      $BashPath = ""

      if ($env:compiler -eq "msys2") {
        $BashPath = "C:\msys64\usr\bin\bash"
        & $BashPath -lc "pacman -S --noconfirm autoconf-archive mingw-w64-x86_64-cairo mingw-w64-x86_64-freetype mingw-w64-x86_64-fontconfig mingw-w64-x86_64-libpng mingw-w64-x86_64-pango"
      }

      if ($env:compiler -eq "cygwin") {
        C:\cygwin64\setup-x86_64.exe -qnNdO -R C:/cygwin64 -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup -P autoconf-archive -P flex -P swig -P mingw64-x86_64-cairo -P expat -P mingw64-x86_64-freetype -P mingw64-x86_64-fontconfig -P mingw64-x86_64-glib2.0 -P mingw64-x86_64-libpng -P mingw64-x86_64-pango -P zlib -P mingw64-x86_64-libpng
        $BashPath = "C:\cygwin64\bin\bash"
        # For some reason Cygwin ignores CHERE_INVOKING=1 for the first bash command.
        # Executing some arbitrary command solves this. So without this next line, the build will fail.
        & $BashPath -lc "ls"
      }

      Write-Output "Execute ./autogen.sh, which also executes ./configure"

      & $BashPath -lc "./autogen.sh"
      
      Write-Output "Execute make"

      & $BashPath -lc "make"
