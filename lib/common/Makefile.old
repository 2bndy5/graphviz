all:	libcommon.a
ROOT=../..
include $(ROOT)/Config.mk
include $(ROOT)/makearch/$(ARCH)

INCS =  -I. \
        -I$(ROOT) \
        -I../cdt \
	-I../pack \
	-I../fdpgen \
        -I../pathplan \
	-I../gd \
	-I../graph \
	-I../gvc \
	$(EXTLIB_INC)

DEFINES = -DHAVE_CONFIG_H

AWKDIR = $(ROOT)/awk

HDRS = colortbl.h const.h globals.h macros.h render.h \
       renderprocs.h types.h utils.h

OBJS = args.o arrows.o gdusershape.o mapgen.o psgen.o svgusershape.o \
       colxlate.o globals.o mifgen.o psusershape.o timing.o \
       diagen.o hpglgen.o mpgen.o routespl.o utils.o \
       emit.o htmllex.o ns.o shapes.o vrmlgen.o xdgen.o \
       figgen.o htmlparse.o output.o splines.o vtxgen.o \
       fontmetrics.o htmltable.o picgen.o strcasecmp.o \
       gdgen.o input.o pointset.o strncasecmp.o \
       gdtextsize.o labels.o postproc.o svggen.o xdgen.o

libcommon.a : $(OBJS)
	$(RM) libcommon.a
	$(AR) cr libcommon.a $(OBJS)
	$(RANLIB) libcommon.a

htmllex.o : htmlparse.c

htmlparse.h htmlparse.c : htmlparse.y
	$(YACC) -dv htmlparse.y
	if test $(ARCH) != "netbsd.i386"; then $(SED) 1s/#include.*// < y.tab.c | $(SED) "s/yy/html/g" > htmlparse.c; else $(SED) "s/yy/html/g" < y.tab.c > htmlparse.c; fi
	$(SED) "s/yy/html/g" < y.tab.h > htmlparse.h
	$(RM) y.tab.c y.tab.h

htmllex.o : htmllex.c
	$(CC) -c $(CCFLAGS) $(DEFINES) $(INCS) $(EXPAT_INC) htmllex.c

install: libcommon.a 
	$(MKPATH) $(INCDIR)
	$(INSTALL) const.h globals.h macros.h render.h renderprocs.h types.h utils.h $(INCDIR)
	$(MKPATH) $(LIBDIR)
	$(INSTALL) libcommon.a $(LIBDIR)

$(OBJS) : $(HDRS)
colxlate.o : colortbl.h
psgen.o : ps.h
emit.o mapgen.o utils.o htmllex.o htmltable.o htmlparse.o : htmltable.h
htmllex.o : htmlparse.h
htmlparse.o htmllex.o : htmllex.h
arrows.o colxlate.o diagen.o emit.o figgen.o fontmetrics.o gdgen.o \
gdtextsize.o gdusershape.o globals.o hpglgen.o htmllex.o htmlparse.o \
htmltable.o input.o labels.o mapgen.o mifgen.o mpgen.o ns.o output.o \
picgen.o pointset.o postproc.o psgen.o psusershape.o routespl.o shapes.o \
splines.o svggen.o svgusershape.o timing.o utils.o vrmlgen.o vtxgen.o \
xdgen.o : types.h

#ps.h : ps.txt
#	$(AWK) -f $(AWKDIR)/stringize.awk ps.txt > ps.h

colortbl.h : color_names
	$(SED) s/_//g color_names | LC_COLLATE=C $(SORT) > color_lib
	$(AWK) -f $(AWKDIR)/colortbl.awk color_lib > colortbl.h
	$(RM) color_lib

clean:
	$(RM) core *.o htmlparse.c htmlparse.h colortbl.h y.output

distclean: clean
	$(RM) *.a
